/* Define to 1 if you have the `clock_gettime` function. */
#cmakedefine01 HAVE_CLOCK_GETTIME

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine01 HAVE_DLFCN_H

/* Define to 1 if you have the `dlopen` function. */
#cmakedefine01 HAVE_DLOPEN

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine01 HAVE_FCNTL_H

/* Define to 1 if you have the `gettimeofday` function. */
#cmakedefine01 HAVE_GETTIMEOFDAY

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine01 HAVE_INTTYPES_H

/* Define to 1 if you have the <libudev.h> header file. */
#cmakedefine01 HAVE_LIBUDEV_H

/* Define to 1 if your system has a GNU libc compatible `malloc` function, and
   to 0 otherwise. */
#cmakedefine01 HAVE_MALLOC

/* Define to 1 if you have the <malloc.h> header file. */
#cmakedefine01 HAVE_MALLOC_H

/* Define to 1 if you have the `memmove` function. */
#cmakedefine01 HAVE_MEMMOVE

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine01 HAVE_MEMORY_H_

/* Define to 1 if you have the `memset` function. */
#cmakedefine01 HAVE_MEMSET

/* Define to 1 if your system has a GNU libc compatible `realloc` function,
   and to 0 otherwise. */
#cmakedefine01 HAVE_REALLOC

/* Define to 1 if you have the `select` function. */
#cmakedefine01 HAVE_SELECT

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine01 HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine01 HAVE_STDLIB_H

/* Define to 1 if you have the `strerror` function. */
#cmakedefine01 HAVE_STRERROR

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine01 HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine01 HAVE_STRING_H

/* Define to 1 if you have the `strstr` function. */
#cmakedefine01 HAVE_STRSTR

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#cmakedefine01 HAVE_SYS_IOCTL_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine01 HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine01 HAVE_SYS_TIME_H

/* Define to 1 if you have the <termios.h> header file. */
#cmakedefine01 HAVE_TERMIOS_H

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine01 HAVE_UNISTD_H

/* Define to 1 if the system has the type `_Bool`. */
#cmakedefine01 HAVE__BOOL

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#cmakedefine LT_OBJDIR "@LT_OBJDIR@"

/* Name of package */
#cmakedefine PACKAGE "@PACKAGE@"

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#define PACKAGE_URL "@PACKAGE_URL@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine01 STDC_HEADERS

/* Version number of package */
#cmakedefine VERSION "@VERSION@"

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T

/* Define to `__inline__` or `__inline` if that's what the C compiler
   calls it, or to nothing if `inline` is not supported under any name. */
#ifndef __cplusplus
#cmakedefine inline @inline@
#endif

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard include do not define it. */
#cmakedefine int16_t 2

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard include do not define it. */
#cmakedefine int32_t 4

/* Define to the type of a signed integer type of width exactly 8 bits if
   such a type exists and the standard include do not define it. */
#cmakedefine int8_t 1

/* Define to rpl_malloc if the replacement function should be used. */
#cmakedefine malloc @malloc@

/* Define to rpl_realloc if the replacement function should be used. */
#cmakedefine realloc @realloc@

/* Define to `unsigned int` if <sys/types.h> does not define. */
#cmakedefine size_t @SIZE_T@

/* Define to `int` if <sys/types.h> does not define. */
#cmakedefine ssize_t @SSIZE_T@

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint16_t 2

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t 4

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t 8

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint8_t 1
